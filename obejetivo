Análise Detalhada dos Arquivos
1. redirect.php
Propósito: Este arquivo funciona como um "redirecionador inteligente". Ele é o ponto de entrada do sistema para o usuário final.

Funcionamento:

Ele espera receber o ID de uma sala através da URL (por exemplo: .../redirect.php?sala=123).

Em seguida, ele cria um formulário oculto que é submetido automaticamente via JavaScript assim que a página carrega.

A sua principal função é converter uma requisição simples (GET, vinda de um link ou QR Code) em uma requisição POST para o arquivo registro.php. Isso é útil para manter a URL do formulário principal mais "limpa" e padronizada.

2. registro.php
Propósito: É a interface principal do sistema, o formulário de registro de limpeza.

Funcionamento (PHP - Lado do Servidor):

Conecta-se a um banco de dados Oracle.

Recebe o id_sala enviado pelo redirect.php.

Faz uma consulta (SELECT) para buscar o nome da sala e o nome do setor correspondente àquele ID.

Exibe esses nomes em campos desabilitados no formulário.

Funcionamento (HTML/JavaScript - Lado do Cliente):

Exibe um formulário completo para o registro, pedindo dados como nome do colaborador, tipo de limpeza, etc.

Usa JavaScript para preencher automaticamente os campos de data e hora com os valores atuais, o que economiza tempo e reduz erros.

Possui uma lógica interativa importante: se o Tipo de Limpeza for "Terminal", ele exibe campos adicionais (Criticidade, Portas, Teto, etc.) e torna o campo "Criticidade" obrigatório. Caso contrário, mantém esses campos ocultos.

3. salvar_registro.php
Propósito: É o arquivo responsável por receber os dados do formulário e salvá-los no banco de dados.

Funcionamento:

Recebe todas as informações enviadas pelo formulário registro.php.

Conecta-se ao mesmo banco de dados Oracle.

Executa um comando INSERT para gravar os dados na tabela if_tbl_registro_higiene. Notei que ele usa SYSDATE para o campo DATA_LIMPEZA, inserindo a data do servidor no momento do registro, o que é uma boa prática.

Utiliza oci_bind_by_name para vincular os dados, o que é uma medida de segurança fundamental contra ataques de injeção de SQL.

Ao final, se a operação for bem-sucedida, exibe uma mensagem de sucesso com um botão para "Fechar esta aba". Se ocorrer um erro, mostra a mensagem de erro do banco de dados.
